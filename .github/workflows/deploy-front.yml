name: deploy-front
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Environment
        working-directory: ./frontend
        run: |
          touch .env
          echo VITE_TITLE=${{ secrets.VITE_HOST }} >> .env
          cat .env

      - name: npm install
        working-directory: ./frontend
        run: npm install

      - name: vite run build
        working-directory: ./frontend
        run: npm run build
      - name: directory public
        run: |
          rm -r ./public
          mkdir public
          cp -r ./frontend/dist/* ./public

      - name: rm
        run: |
          rm -r frontend/node_modules

      - name: rm .env
        run: rm frontend/.env

      - name: ls
        run: |
          ls public
          ls public/assets
      - name: commit files
        uses: stefanzweifel/git-auto-commit-action@v4.2.0
        with:
          commit_message: build and commit for deno deploy

      - if: always()
        name: Send GitHub Action trigger data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.19.0
        with:
          payload: |
            {
              "text": ":github: フロントエンドビルド結果: ${{ job.status }}\n\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":github: フロントエンドビルド結果: ${{ job.status }}\n\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Author: <https://github.com/${{ github.event.sender.login }}|@${{ github.event.sender.login }}>"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}